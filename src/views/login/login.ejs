<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Express Delivery | Se connecter</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="../../assets/css/register.css">
    <%- include("../../public/assets/partials/toasts"); %>
</head>

<body>
    <div class="container">
        <div class="auth-card">
            <div class="logo">
                <div class="logo-circle"></div>
            </div>
            <h1>Bon retour parmis nous !</h1>
            <p class="subtitle">Entrez vos informations de connexion afin
                d'accéder à votre compte</p>

            <form class="auth-form">
                <div class="form-group">
                    <input type="text" id="username"
                        placeholder="Nom d'utilisateur" required>
                </div>
                <div class="form-group">
                    <input type="password" id="password"
                        placeholder="Mot de passe" required>
                </div>
                <button type="submit" class="btn-primary">Se connecter</button>
            </form>

            <p class="bottom-text">
                Pas encore de compte ? <a href="/register">Créer un compte</a>
            </p>
        </div>
    </div>

    <script>
        // On obtient le bouton de soumission du formulaire
        const submitBtn = document.querySelector('.btn-primary');

        // On écoute l'événement de soumission du formulaire
        submitBtn.addEventListener('click', (e) => {
            e.preventDefault();

            // On obtient les éléments du formulaire
            const form = document.querySelector('.auth-form');
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            // REGEX pour détecter les valeurs vides
            const emptyRegex = /^\s*$/;
            const isEmpty = (value) => emptyRegex.test(value);

            // REGEX pour valider le nom d'utilisateur (3 char min, 20 char max, only letters and numbers)
            const usernameRegex = /^[a-zA-Z0-9]{3,20}$/;
            const isValidUsername = (username) => usernameRegex.test(
                username);

            // Validation des champs
            if (isEmpty(username) || isEmpty(password)) {
                document.error('Veuillez remplir tous les champs');
                return;
            };

            // On vérifie si le nom d'utilisateur est valide
            if (!isValidUsername(username)) {
                document.error(
                    "Le nom d'utilisateur est invalide."
                );
                return;
            };

            fetch('/api/users/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        username,
                        password
                    }),
                })
                .then((res) => res.json())
                .then((data) => {
                    if (data.error) {
                        document.error(data.error.message);
                    } else {
                        document.success(data.success.message);
                        setTimeout(() => {
                            window.location.href = '/';
                        }, 3000);
                    }
                })
                .catch((e) => {
                    console.log(e);
                    document.error(
                        'Une erreur est survenue. Veuillez réessayer.',
                    );
                });

        });
    </script>
</body>

</html>